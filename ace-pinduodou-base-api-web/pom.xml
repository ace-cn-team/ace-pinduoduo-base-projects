<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>ace-pinduodou-base-projects</artifactId>
        <groupId>org.ace</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>ace-pinduodou-base-api-web</artifactId>
    <dependencies>
        <dependency>
            <groupId>org.ace</groupId>
            <artifactId>ace-pinduodou-base-api</artifactId>
        </dependency>
<!--        <dependency>-->
<!--            <groupId>org.ace</groupId>-->
<!--            <artifactId>ace-fw-restful-base-api-web</artifactId>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>org.ace</groupId>-->
<!--            <artifactId>ace-fw-restful-base-api-web-mybatis-plus-autoconfigure</artifactId>-->
<!--        </dependency>-->
        <dependency>
            <groupId>org.ace</groupId>
            <artifactId>ace-fw-ms-application</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ace</groupId>
            <artifactId>ace-fw-ms-application-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ace</groupId>
            <artifactId>ace-fw-data</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ace</groupId>
            <artifactId>ace-fw-log4j2-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>
        <dependency>
            <groupId>org.ace</groupId>
            <artifactId>ace-fw-ms-discovery-server-autoconfigure</artifactId>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.2.4.RELEASE</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--使用jib插件-->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>2.1.0</version>
                <configuration>
                    <!--from节点用来设置镜像的基础镜像，相当于Docerkfile中的FROM关键字-->
                    <from>
                        <!--使用openjdk官方镜像，tag是 -->
                        <image>openjdk:11.0.6-jre-buster</image>
                    </from>
                    <to>
                        <!--镜像名称和tag，使用了mvn内置变量${project.version}，表示当前工程的version-->
                        <image>${project.name}:latest</image>
                    </to>
                    <!--容器相关的属性-->
                    <container>
                        <!--jvm内存参数-->
                        <jvmFlags>
                            <jvmFlag>-Xms2g</jvmFlag>
                            <jvmFlag>-Xmx2g</jvmFlag>
                        </jvmFlags>
                        <!--要暴露的端口-->
                        <ports>
                            <port>7001</port>
                        </ports>
                    </container>
                </configuration>
                <!--加了这段代码，构建命令 使用mvn package 否则 使用mvn compile jib:dockerBuild -->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>dockerBuild</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->

            </plugin>
        </plugins>
    </build>
</project>